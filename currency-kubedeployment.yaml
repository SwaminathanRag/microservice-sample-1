apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: currency-conversion
  name: currency-conversion
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: currency-conversion
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: currency-conversion
    spec:
      containers:
      - envFrom:
        - configMapRef:
            name: currency-configmap
        image: swdocker/v2-currency-conversion-service:0.0.1-SNAPSHOT
        imagePullPolicy: IfNotPresent
        name: v2-currency-conversion-service
        readinessProbe:
          httpGet:
            path: actuator/health/readiness
            port: 8100
          initialDelaySeconds: 10
          periodSeconds: 3
        livenessProbe:
          httpGet:
            path: actuator/health/liveness
            port: 8100
          initialDelaySeconds: 20
          periodSeconds: 8
          
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: currency-conversion
  name: currency-conversion
  namespace: default
spec:
  ports:
  - port: 8100
    protocol: TCP
    targetPort: 8100
  selector:
    app: currency-conversion
  type: ClusterIP


---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: currency-exchange
  name: currency-exchange
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: currency-exchange
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: currency-exchange
    spec:
      containers:
      - envFrom:
        - configMapRef:
            name: currency-configmap
        image: swdocker/v2-currency-exchange-service:0.0.1-SNAPSHOT
        imagePullPolicy: IfNotPresent
        name: v2-currency-exchange-service
        readinessProbe:
          httpGet:
            path: actuator/health/readiness
            port: 8000
          initialDelaySeconds: 10
          periodSeconds: 3
        livenessProbe:
          httpGet:
            path: actuator/health/liveness
            port: 8000
          initialDelaySeconds: 20
          periodSeconds: 8

---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: currency-exchange
  name: currency-exchange
  namespace: default
spec:
  ports:
  - port: 8000
    protocol: TCP
    targetPort: 8000
  selector:
    app: currency-exchange
  type: ClusterIP

---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: naming-server
  name: naming-server
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: naming-server
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: naming-server
    spec:
      containers:
      - image: swdocker/v2-naming-server:0.0.1-SNAPSHOT
        imagePullPolicy: IfNotPresent
        name: v2-naming-server
        readinessProbe:
          httpGet:
            path: actuator/health/readiness
            port: 8761
          initialDelaySeconds: 10
          periodSeconds: 3
        livenessProbe:
          httpGet:
            path: actuator/health/liveness
            port: 8761
          initialDelaySeconds: 20
          periodSeconds: 8

---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: naming-server
  name: naming-server
  namespace: default
spec:
  ports:
  - nodePort: 30907
    port: 8761
    protocol: TCP
    targetPort: 8761
  selector:
    app: naming-server
  type: LoadBalancer

---
apiVersion: v1
kind: ConfigMap
data:
  eureka.client.serviceUrl.defaultZone: http://naming-server:8761/eureka
  eureka.instance.preferIpAddress: "true"
  management.zipkin.tracing.endpoint: http://zipkin-server:9411/api/v2/spans
metadata:
  name: currency-configmap
  namespace: default

---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: zipkin-server
  name: zipkin-server
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: zipkin-server
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: zipkin-server
    spec:
      containers:
      - image: openzipkin/zipkin:2.23
        imagePullPolicy: IfNotPresent
        name: v2-zipkin-server
        
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: zipkin-server
  name: zipkin-server
  namespace: default
spec:
  ports:
  - nodePort: 31160
    port: 9411
    protocol: TCP
    targetPort: 9411
  selector:
    app: zipkin-server
  type: LoadBalancer

---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: api-gateway
  name: api-gateway
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: api-gateway
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: api-gateway
    spec:
      containers:
      - envFrom:
        - configMapRef:
            name: currency-configmap
        image: swdocker/v2-api-gateway:0.0.1-SNAPSHOT
        imagePullPolicy: IfNotPresent
        name: v2-api-gateway
        readinessProbe:
          httpGet:
            path: actuator/health/readiness
            port: 8765
          initialDelaySeconds: 10
          periodSeconds: 3
        livenessProbe:
          httpGet:
            path: actuator/health/liveness
            port: 8765
          initialDelaySeconds: 20
          periodSeconds: 8

---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: api-gateway
  name: api-gateway
  namespace: default
spec:
  ports:
  - nodePort: 31170
    port: 8765
    protocol: TCP
    targetPort: 8765
  selector:
    app: api-gateway
  type: LoadBalancer
